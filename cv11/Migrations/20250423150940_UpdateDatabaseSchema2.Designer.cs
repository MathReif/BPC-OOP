// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cv11.EFCore;

#nullable disable

namespace cv11.Migrations
{
    [DbContext(typeof(VyukaContext))]
    [Migration("20250423150940_UpdateDatabaseSchema2")]
    partial class UpdateDatabaseSchema2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cv11.EFCore.Hodnoceni", b =>
                {
                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<string>("ZkratkaPredmet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Datumt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Znamka")
                        .HasColumnType("int");

                    b.HasKey("IdStudent", "ZkratkaPredmet");

                    b.HasIndex("ZkratkaPredmet");

                    b.ToTable("Hodnocenis");
                });

            modelBuilder.Entity("cv11.EFCore.Predmet", b =>
                {
                    b.Property<string>("Zkratka")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Zkratka");

                    b.ToTable("Predmets");
                });

            modelBuilder.Entity("cv11.EFCore.Student", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumNarozeni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("cv11.EFCore.StudentPredmet", b =>
                {
                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<string>("ZkratkaPredmet")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdStudent", "ZkratkaPredmet");

                    b.HasIndex("ZkratkaPredmet");

                    b.ToTable("StudentPredmets");
                });

            modelBuilder.Entity("cv11.EFCore.Hodnoceni", b =>
                {
                    b.HasOne("cv11.EFCore.Student", "Student")
                        .WithMany("Hodnoceni")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cv11.EFCore.Predmet", "Predmet")
                        .WithMany("Hodnoceni")
                        .HasForeignKey("ZkratkaPredmet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("cv11.EFCore.StudentPredmet", b =>
                {
                    b.HasOne("cv11.EFCore.Student", "Student")
                        .WithMany("StudentPredmet")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cv11.EFCore.Predmet", "Predmet")
                        .WithMany("StudentPredmet")
                        .HasForeignKey("ZkratkaPredmet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("cv11.EFCore.Predmet", b =>
                {
                    b.Navigation("Hodnoceni");

                    b.Navigation("StudentPredmet");
                });

            modelBuilder.Entity("cv11.EFCore.Student", b =>
                {
                    b.Navigation("Hodnoceni");

                    b.Navigation("StudentPredmet");
                });
#pragma warning restore 612, 618
        }
    }
}
